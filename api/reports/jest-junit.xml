<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="40" failures="0" errors="0" time="4.683">
  <testsuite name="markupMultiplicador" errors="0" failures="0" skipped="0" timestamp="2025-05-30T00:18:33" time="2.723" tests="4">
    <testcase classname="markupMultiplicador deve retornar erro 400 se faltar campo obrigatório" name="markupMultiplicador deve retornar erro 400 se faltar campo obrigatório" time="0.079">
    </testcase>
    <testcase classname="markupMultiplicador deve retornar erro 400 se soma de percentuais ≥ 100%" name="markupMultiplicador deve retornar erro 400 se soma de percentuais ≥ 100%" time="0.049">
    </testcase>
    <testcase classname="markupMultiplicador calcula corretamente markup e preço de venda" name="markupMultiplicador calcula corretamente markup e preço de venda" time="0.004">
    </testcase>
    <testcase classname="markupMultiplicador markup = 1 e precoVenda = custo quando percentuais = 0" name="markupMultiplicador markup = 1 e precoVenda = custo quando percentuais = 0" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Função calcularAposentadoria" errors="0" failures="0" skipped="0" timestamp="2025-05-30T00:18:33" time="3.18" tests="28">
    <testcase classname="Função calcularAposentadoria Mulher que já pode se aposentar" name="Função calcularAposentadoria Mulher que já pode se aposentar" time="0.021">
    </testcase>
    <testcase classname="Função calcularAposentadoria Homem que já pode se aposentar" name="Função calcularAposentadoria Homem que já pode se aposentar" time="0.003">
    </testcase>
    <testcase classname="Função calcularAposentadoria Mulher que não pode se aposentar por idade" name="Função calcularAposentadoria Mulher que não pode se aposentar por idade" time="0.003">
    </testcase>
    <testcase classname="Função calcularAposentadoria Homem que não pode se aposentar por contribuição" name="Função calcularAposentadoria Homem que não pode se aposentar por contribuição" time="0.001">
    </testcase>
    <testcase classname="Função calcularAposentadoria Mulher que não pode se aposentar por idade e contribuição" name="Função calcularAposentadoria Mulher que não pode se aposentar por idade e contribuição" time="0.002">
    </testcase>
    <testcase classname="Função calcularAposentadoria Idade negativa" name="Função calcularAposentadoria Idade negativa" time="0.001">
    </testcase>
    <testcase classname="Função calcularAposentadoria Contribuição negativa" name="Função calcularAposentadoria Contribuição negativa" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Mulher que já pode se aposentar por pontuação" name="Função calcularPontuacao Mulher que já pode se aposentar por pontuação" time="0.007">
    </testcase>
    <testcase classname="Função calcularPontuacao Homem que já pode se aposentar por pontuação" name="Função calcularPontuacao Homem que já pode se aposentar por pontuação" time="0.003">
    </testcase>
    <testcase classname="Função calcularPontuacao Mulher que faltam anos para atingir a pontuação" name="Função calcularPontuacao Mulher que faltam anos para atingir a pontuação" time="0.017">
    </testcase>
    <testcase classname="Função calcularPontuacao Homem que faltam anos para atingir a pontuação" name="Função calcularPontuacao Homem que faltam anos para atingir a pontuação" time="0.008">
    </testcase>
    <testcase classname="Função calcularPontuacao Homem com idade baixa mas alta contribuição, faltando poucos anos" name="Função calcularPontuacao Homem com idade baixa mas alta contribuição, faltando poucos anos" time="0.002">
    </testcase>
    <testcase classname="Função calcularPontuacao Idade negativa deve retornar erro" name="Função calcularPontuacao Idade negativa deve retornar erro" time="0.002">
    </testcase>
    <testcase classname="Função calcularPontuacao Contribuição negativa deve retornar erro" name="Função calcularPontuacao Contribuição negativa deve retornar erro" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Sexo inválido deve retornar erro" name="Função calcularPontuacao Sexo inválido deve retornar erro" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Dados incompletos (idade faltando) deve retornar erro" name="Função calcularPontuacao Dados incompletos (idade faltando) deve retornar erro" time="0.002">
    </testcase>
    <testcase classname="Função calcularPontuacao Dados incompletos (contribuicao faltando) deve retornar erro" name="Função calcularPontuacao Dados incompletos (contribuicao faltando) deve retornar erro" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Mulher com pontuação exata no limite (100)" name="Função calcularPontuacao Mulher com pontuação exata no limite (100)" time="0">
    </testcase>
    <testcase classname="Função calcularPontuacao Homem com pontuação exata no limite (105)" name="Função calcularPontuacao Homem com pontuação exata no limite (105)" time="0">
    </testcase>
    <testcase classname="Rotas de Histórico Deve registrar uma operação no histórico" name="Rotas de Histórico Deve registrar uma operação no histórico" time="0.003">
    </testcase>
    <testcase classname="Rotas de Histórico Deve filtrar histórico por tipo" name="Rotas de Histórico Deve filtrar histórico por tipo" time="0.002">
    </testcase>
    <testcase classname="Rotas de Histórico Deve limitar o histórico a 100 operações" name="Rotas de Histórico Deve limitar o histórico a 100 operações" time="0.007">
    </testcase>
    <testcase classname="Rotas de Histórico Deve ordenar histórico do mais recente para o mais antigo" name="Rotas de Histórico Deve ordenar histórico do mais recente para o mais antigo" time="0.103">
    </testcase>
    <testcase classname="Rotas de Histórico Deve registrar diferentes tipos de operações" name="Rotas de Histórico Deve registrar diferentes tipos de operações" time="0.002">
    </testcase>
    <testcase classname="Função calcularTempoAposentadoria Pessoa que já pode se aposentar" name="Função calcularTempoAposentadoria Pessoa que já pode se aposentar" time="0.002">
    </testcase>
    <testcase classname="Função calcularTempoAposentadoria Pessoa que falta tempo para idade mínima" name="Função calcularTempoAposentadoria Pessoa que falta tempo para idade mínima" time="0.001">
    </testcase>
    <testcase classname="Função calcularTempoAposentadoria Pessoa que falta tempo de contribuição" name="Função calcularTempoAposentadoria Pessoa que falta tempo de contribuição" time="0">
    </testcase>
    <testcase classname="Função calcularTempoAposentadoria Dados incompletos" name="Função calcularTempoAposentadoria Dados incompletos" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MKP1 API Tests" errors="0" failures="0" skipped="0" timestamp="2025-05-30T00:18:33" time="3.787" tests="8">
    <testcase classname="MKP1 API Tests POST /mkp1/markup-simples deve calcular markup simples corretamente" name="MKP1 API Tests POST /mkp1/markup-simples deve calcular markup simples corretamente" time="0.083">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/markup-simples deve retornar erro quando faltar parâmetros" name="MKP1 API Tests POST /mkp1/markup-simples deve retornar erro quando faltar parâmetros" time="0.012">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/markup-detalhado deve calcular markup detalhado corretamente" name="MKP1 API Tests POST /mkp1/markup-detalhado deve calcular markup detalhado corretamente" time="0.007">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/markup-detalhado deve retornar erro quando faltar parâmetros" name="MKP1 API Tests POST /mkp1/markup-detalhado deve retornar erro quando faltar parâmetros" time="0.006">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/sugestao-preco deve calcular sugestão de preço corretamente" name="MKP1 API Tests POST /mkp1/sugestao-preco deve calcular sugestão de preço corretamente" time="0.006">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/sugestao-preco deve retornar erro quando faltar parâmetros" name="MKP1 API Tests POST /mkp1/sugestao-preco deve retornar erro quando faltar parâmetros" time="0.007">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/lucro-obtido deve calcular lucro obtido corretamente" name="MKP1 API Tests POST /mkp1/lucro-obtido deve calcular lucro obtido corretamente" time="0.004">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/lucro-obtido deve retornar erro quando faltar parâmetros" name="MKP1 API Tests POST /mkp1/lucro-obtido deve retornar erro quando faltar parâmetros" time="0.004">
    </testcase>
  </testsuite>
</testsuites>